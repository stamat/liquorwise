<?php

namespace liquorwise;

use Carbon\Carbon;

class ThemeSettings
{

    protected $file;

    protected $output_file;

    protected $pid_file;

    public function __construct()
    {
        // Set file locations
        $this->file = __DIR__ . "/../assets/styles/common/_theme-settings.scss";
        $this->output_file = __DIR__ . "/../liquorwise/log/FIXME-output.txt";
        $this->pid_file = __DIR__ . "/../liquorwise/log/FIXME-pid.txt";
        
    }

    public function registerThemeSettingsPages()
    {
        // Register theme options page
        if (function_exists('acf_add_options_page')) {
            acf_add_options_page([
                'page_title' => 'Theme General Settings',
                'menu_title' => 'Theme General Settings',
                'menu_slug'  => 'theme-general-settings',
                'capability' => 'edit_posts',
                'redirect'   => false,
            ]);
        }
    }

    public function compileAssetsAfterThemeSettingsSave($post_id)
    {
        $screen = get_current_screen();
        $slug = "theme-general-settings";
        
        if (preg_match("/".$slug."/", $screen->id)) {
            $time = Carbon::now('Europe/London')->timestamp;

            $output_file = str_replace('FIXME', $time, $this->output_file);
            $pid_file = str_replace('FIXME', $time, $this->pid_file);

            // Get new value
            $main_site_color = get_field('main_site_color');
            $border_shadow_color = get_field('secondary_site_color');
            $foreground = get_field('foreground');
            $background = get_field('background');
            $section_background = get_field('section_background');
            $section_separator = get_field('section_separator');

            $content = "// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED WHEN YOU SAVE THEME SETTINGS!\n";

            if (!empty($main_site_color)) {
                $content .= "\$red: {$main_site_color};\n";
            }

            if (!empty($border_shadow_color)) {
                $content .= "\$red-bg: {$border_shadow_color};\n";
            }
            
            if (!empty($foreground)) {
                $content .= "\$white: {$foreground};\n";
            }
            
            if (!empty($background)) {
                $content .= "\$black: {$background};\n";
            }
            
            if (!empty($section_background)) {
                $content .= "\$gray-bg: {$section_background};\n";
            }
            
            if (!empty($section_separator)) {
                $content .= "\$gray: {$section_separator};";
            }
            
            if (!file_exists($this->file)) {
                file_put_contents($this->file, '');
                chmod($this->file, 0777);
            }

            file_put_contents($this->file, $content);

            $gulp = exec('which gulp');
            $theme_dir = get_template_directory();

            $command = "cd {$theme_dir} && {$gulp} --production";

            exec(sprintf("%s > %s 2>&1 & echo $! >> %s", $command, $output_file, $pid_file));
        }
    }
}